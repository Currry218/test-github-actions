name: Build and Publish Docker image # To docker hub

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set up Node.js (if needed for building/testing)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: npm install

    # Step 4: Run Tests
    - name: Run Tests
      run: npm test



  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-example:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-example:latest

      - name: Update image metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-example:latest
          tags: |
            type=sha
          labels: |
            org.opencontainers.image.title=Test GA Example
            org.opencontainers.image.description=Example NestJS application
            org.opencontainers.image.url=https://github.com/${{github.repository}}
            org.opencontainers.image.revision=${{github.sha}}
            org.opencontainers.image.licenses=MIT

  deploy:
    if: ${{ github.ref_name == 'main' }} 
    needs: build-and-push
    runs-on: ubuntu-latest
    name: Deploy Docker Image

    steps:
      # Step 1: Deploy to Render
      - name: Deploy to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.3
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-example:latest
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deployment: true